{"version":3,"sources":["components/HeaderComponent.js","components/FooterComponent.js","components/HomeComponent/SignInComponent.js","components/HomeComponent/TitleComponent.js","components/HomeComponent/HomeComponent.js","components/ActivityComponent/ActivityComponent.js","shared/userData.js","shared/locationData.js","components/PairingComponent.js","components/SuggestComponent.js","components/MainComponent.js","App.js","serviceWorker.js","index.js"],"names":["Header","props","useState","isNavOpen","setNavOpen","Fragment","Navbar","dark","sticky","expand","NavbarToggler","onClick","Collapse","isOpen","navbar","Nav","className","NavItem","to","NavbarBrand","href","src","height","width","alt","Footer","SignIn","Container","Row","Col","xs","Form","FormGroup","row","Label","for","sm","Input","type","name","id","Button","color","style","Title","Jumbotron","Home","Activity","acceptmodal","setAcceptModal","messagemodal","setMessageModal","linkToHome","setLinkToHome","toggleAcceptModal","toggleMessageModal","push","md","lg","Card","CardHeader","CardBody","modalReject","Media","top","image","CardTitle","restaurant","activity","location","CardText","date","time","userReject","Modal","toggle","ModalHeader","ModalBody","USERDATA","LOCATIONDATA","city","Pairing","setDate","setTime","setActivity","setLocation","setRestaurant","setName","shown","setShown","setImage","userdata","locationdata","modalRejectPairing","setModalRejectPairing","cardFocus","useRef","userReject2Pairing","handleFood","selectUserIndex","randomNumber","scrollToBottom","current","scrollIntoView","behavior","Math","floor","random","filter","obj","onSubmit","event","console","log","length","substr","setTimeout","preventDefault","placeholder","draggable","value","onChange","e","target","required","FormFeedback","ref","Suggest","setModalReject","userReject2","today","Date","hours","getHours","minutes","getMinutes","month","getMonth","day","getDate","Main","withRouter","key","classNames","timeout","exact","path","component","App","Component","Boolean","window","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.42ae6a25.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport { Nav, Navbar, NavbarBrand, NavbarToggler, Collapse, NavItem } from 'reactstrap';\nimport { NavLink } from 'react-router-dom';\n\nfunction Header(props) {\n\n    const [isNavOpen, setNavOpen] = useState(false);\n\n    const toggleNav = () => {\n        setNavOpen(!isNavOpen);\n    }\n\n    return (\n        <React.Fragment>\n            <Navbar dark sticky=\"top\" expand=\"md\">\n                <NavbarToggler onClick={toggleNav} />\n                <Collapse isOpen={isNavOpen} navbar>\n                    <Nav navbar className=\"mr-auto\">\n                        <NavItem>\n                            <NavLink className=\"nav-link\" to=\"/home\">\n                                Home\n                                </NavLink>\n                        </NavItem>\n                        <NavItem>\n                            <NavLink className=\"nav-link\" to=\"/pairing\">\n                                Pairing\n                                </NavLink>\n                        </NavItem>\n                        <NavItem>\n                            <NavLink className=\"nav-link\" to=\"/suggest\">\n                                Suggestion\n                                </NavLink>\n                        </NavItem>\n                    </Nav>\n                    <NavbarBrand className=\"navbar-brand d-none d-md-block\" href=\"/\">\n                        <img src=\"/assets/images/hang_logo.png\" height=\"30\" width=\"30\" alt=\"Hang Logo\" />Hang\n                    </NavbarBrand>\n                    <div className=\"ml-auto xs={mx-auto}\">\n                        <a className=\"nav-link-icon\" href=\"/\"><i className=\"fa fa-android  fa-fw fa-lg\" ></i></a>\n                        <a className=\"nav-link-icon\" href=\"/\"><i className=\"fa fa-apple fa-fw fa-lg\"></i></a>\n                        <a className=\"nav-link-icon\" href=\"mailto:nickkniola@me.com\"><i className=\"fa fa-envelope fa-fw fa-lg\"></i></a>\n                    </div>\n                </Collapse>\n                <NavbarBrand className=\"navbar-brand text-white d-block d-md-none mx-auto pr-4\" href=\"/\">\n                    <img src=\"/assets/images/hang_logo.png\" height=\"30\" width=\"30\" alt=\"Hang Logo\" />Hang\n                </NavbarBrand>\n            </Navbar>\n        </React.Fragment>\n    );\n}\n\nexport default Header;","import React from 'react';\n\n\nfunction Footer(props) {\n    return (\n        <footer className=\"site-footer pt-5 mt-5\">\n            <p><small>Hang App ©2020</small></p>\n        </footer>\n    );\n}\n\nexport default Footer;","import React from 'react';\nimport { Container, Row, Col, Form, FormGroup, Label, Input, Button } from 'reactstrap';\nimport { Link } from 'react-router-dom';\n\nfunction SignIn(props) {\n    return (\n        <div>\n            <Container className=\"py-4 mb-5\">\n                <Row className=\"my-4\">\n                    <Col>\n                        <h2>Sign In</h2>\n                    </Col>\n                </Row>\n                <Row>\n                    <Col className=\"mx-auto\" xs={7}>\n                        <Form>\n                            <FormGroup row>\n                                <Label for=\"loginEmail\" sm={3}>Email</Label>\n                                <Col sm={9}>\n                                    <Input type=\"email\" name=\"email\" id=\"loginEmail\" />\n                                </Col>\n                            </FormGroup>\n                            <FormGroup row>\n                                <Label for=\"inputPassword\" sm={3}>Password</Label>\n                                <Col sm={9}>\n                                    <Input type=\"password\" name=\"password\" id=\"inputPassword\" />\n                                </Col>\n                            </FormGroup>\n                        </Form>\n                    </Col>\n                </Row>\n                <Row>\n                    <Col>\n                        <Button color=\"primary\">\n                            <Link to={'/pairing'} style={{ color: 'white' }}>\n                                Submit\n                            </Link>\n                        </Button>\n                    </Col>\n                </Row>\n            </Container>\n        </div>\n    );\n}\n\nexport default SignIn;","import React from 'react';\nimport { Container, Row, Col, Button, Jumbotron } from 'reactstrap';\nimport { Link } from 'react-router-dom';\n\nfunction Title(props) {\n    return (\n        <div>\n            <Jumbotron>\n                <Container className=\"pt-1 my-4\">\n                    <Row className=\"my-3\">\n                        <Col>\n                            <h1>Hang</h1>\n                        </Col>\n                    </Row>\n                    <Row>\n                        <Col>\n                            <p className=\"home-description lead text-justify\">Pair up with people in your location based on your common interests in a variety of activities. The only app which makes plans for you!</p>\n                        </Col>\n                    </Row>\n                    <Row className=\"py-4\">\n                        <Col>\n                            <Button color=\"primary\">\n                                <Link to={'/pairing'} style={{ color: 'white' }} >\n                                    Learn More\n                                </Link>\n                            </Button>\n                        </Col>\n                    </Row>\n                </Container>\n            </Jumbotron>\n        </div>\n    );\n}\n\nexport default Title;","import React from 'react';\nimport SignIn from './SignInComponent';\nimport Title from './TitleComponent';\n\nfunction Home(props) {\n        return (\n            <div>\n                <Title />\n                <SignIn />\n            </div>\n        );\n}\n\nexport default Home;","import React, { useState } from 'react';\nimport { Container, Row, Col, Card, CardHeader, CardBody, CardTitle, CardText, Button, FormGroup, Label, Input, Media, Modal, ModalBody, ModalHeader } from 'reactstrap';\nimport { Redirect } from 'react-router';\n\n\nfunction Activity(props) {\n\n    const [acceptmodal, setAcceptModal] = useState(false);\n    const [messagemodal, setMessageModal] = useState(false);\n    const [linkToHome, setLinkToHome] = useState(false);\n\n    const toggleAcceptModal = () => setAcceptModal(!acceptmodal);\n    const toggleMessageModal = () => setMessageModal(!messagemodal);\n    const userAccepts = () => setLinkToHome(true);\n\n    if (linkToHome) {\n        return (<Redirect push to=\"/home\" />);\n    }\n\n    return (\n        <div className=\"activity py-5\">\n            <Container>\n                <Row>\n                    <Col className=\"mx-auto\" md={10} lg={8} >\n                        <Card className=\"activity-card text-center\">\n                            <CardHeader>Activity Planned</CardHeader>\n                            <CardBody>\n                                <div className={props.modalReject ? 'change' : 'initial'}>\n                                    <Media className=\"profile-image\" top src={props.image} alt=\"Profile Image\" />\n                                    <CardTitle className=\"activity-card-title mb-0\">{props.restaurant} {props.activity} in {props.location}</CardTitle>\n                                    <CardText className=\"activity-card-text\">{props.date} at {props.time} with {props.name}</CardText>\n                                </div>\n                                <Button className=\"mr-1 mt-3\" color=\"primary\" onClick={toggleAcceptModal}>Accept</Button>\n                                <Button className=\"ml-1 mt-3\" color=\"danger\" onClick={props.userReject}>Reject</Button>\n                                <FormGroup className=\"py-5 px-5\">\n                                    <Label className=\"float-left\" for=\"activityMessage\">Message Them Directly</Label>\n                                    <Input type=\"textarea\" name=\"activityMessage\" id=\"activityMessage\"></Input>\n                                    <Button type=\"submit\" className=\"mt-2 float-right\" color=\"secondary\" onClick={toggleMessageModal}>Send</Button>\n                                </FormGroup>\n                                <Modal isOpen={acceptmodal} toggle={toggleAcceptModal}>\n                                    <ModalHeader className=\"justify-content-center\"><img src=\"/assets/images/hang_logo.png\" height=\"30\" width=\"30\" alt=\"Hang Logo\" />Hang</ModalHeader>\n                                    <ModalBody>\n                                        <br />You’re all set! You will be notified if the other user also accepts.<br /><br />\n                                    </ModalBody>\n                                    <Button className=\"mx-5 mb-5\" color=\"secondary\" onClick={userAccepts}>Cool</Button>\n                                </Modal>\n                                <Modal isOpen={messagemodal} toggle={toggleMessageModal}>\n                                    <ModalHeader className=\"justify-content-center\"><img src=\"/assets/images/hang_logo.png\" height=\"30\" width=\"30\" alt=\"Hang Logo\" />Hang</ModalHeader>\n                                    <ModalBody className=\"text-center\">\n                                        <br />Message Sent<br /><br />\n                                    </ModalBody>\n                                    <Button className=\"mx-5 mb-5\" color=\"secondary\" onClick={toggleMessageModal}>Cool</Button>\n                                </Modal>\n                            </CardBody>\n                        </Card>\n                    </Col>\n                </Row>\n            </Container>\n\n\n        </div>\n    );\n}\n\n\nexport default Activity;","\n\nexport const USERDATA = [\n    {\n        id: 0,\n        name: \"Nick\",\n        activity: \"Movie\",\n        location: \"Los Angeles\",\n        image: \"/assets/images/nick.jpg\"\n    },\n    {\n        id: 1,\n        name: \"Tom\",\n        activity: \"Sports\",\n        location: \"Chicago\",\n        image: \"/assets/images/tom.jpg\"\n    },\n    {\n        id: 2,\n        name: \"Kathy\",\n        activity: \"Museum\",\n        location: \"Paris\",\n        image: \"/assets/images/kathy.jpg\"\n    },\n    {\n        id: 3,\n        name: \"Ali\",\n        activity: \"Food\",\n        location: \"Atlanta\",\n        image: \"/assets/images/ali.jpg\"\n    }\n];\n\n","\nexport const LOCATIONDATA = [\n  {\n    name: \"Oriole\",\n    city: \"Chicago\"\n  },\n  {\n    name: \"Xochi\",\n    city: \"Houston\"\n  },\n  {\n    name: \"Bestia\",\n    city: \"Los Angeles\"\n  },\n  {\n    name: \"The Modern\",\n    city: \"New York City\"\n  },\n  {\n    name: \"Vedge\",\n    city: \"Philadelphia\"\n  },\n  {\n    name: \"La Ciccia\",\n    city: \"San Francisco\"\n  },\n  {\n    name: \"Paesano Ristorante Italiano\",\n    city: \"San Jose\"\n  }\n];\n","import React, { useState, useRef } from 'react';\nimport Activity from './ActivityComponent/ActivityComponent';\nimport { Jumbotron, Container, Row, Col, Form, FormGroup, Label, Input, Button, FormFeedback } from 'reactstrap';\nimport { USERDATA } from '../shared/userData.js';\nimport { LOCATIONDATA } from '../shared/locationData.js';\n\nfunction Pairing(props) {\n\n    const [date, setDate] = useState('');\n    const [time, setTime] = useState('');\n    const [activity, setActivity] = useState('');\n    const [location, setLocation] = useState('');\n    const [restaurant, setRestaurant] = useState('');\n    const [name, setName] = useState('');\n    const [shown, setShown] = useState(false);\n    const [image, setImage] = useState('');\n    const [userdata] = useState(USERDATA);\n    const [locationdata] = useState(LOCATIONDATA);\n    const [modalRejectPairing, setModalRejectPairing] = useState(false);\n\n    const cardFocus = useRef(null);\n\n    const userRejectPairing = () => {\n        setModalRejectPairing(true);\n        setTimeout(userReject2Pairing, 500)\n    };\n    const userReject2Pairing = () => {\n        if (activity === 'food') {\n            setActivity('');\n            handleFood();\n        }\n        const selectUserIndex = randomNumber()\n        setName(userdata[selectUserIndex].name);\n        setImage(userdata[selectUserIndex].image);\n        setModalRejectPairing(false);\n    }\n\n    const handleSubmit = event => {\n        activity === 'food' ? setActivity('') : console.log('');\n        const selectUserIndex = randomNumber()\n        setName(userdata[selectUserIndex].name);\n        setImage(userdata[selectUserIndex].image);\n        if (date.length > 5) {\n            setDate(date.substr(5, 8))\n        }\n        setShown(true);\n        setTimeout(scrollToBottom, 0);\n        event.preventDefault();\n    }\n\n    const scrollToBottom = () => {\n        cardFocus.current.scrollIntoView({\n            behavior: \"smooth\"\n        })\n    };\n\n\n\n    const randomNumber = () => Math.floor(Math.random() * 4);\n\n\n\n    const handleActivity = event => {\n        switch (event.target.value) {\n            case 'Food':\n                setActivity(event.target.value)\n                handleFood();\n                break;\n            default:\n                setRestaurant('');\n                setActivity(event.target.value)\n        }\n\n    }\n\n    const handleFood = () => {\n\n        setRestaurant(\n            locationdata.filter(obj => obj.city === location)[0]['name']\n        );\n\n    }\n\n    const handleLocation = (event) => {\n        setLocation(event.target.value);\n    }\n\n\n    return (\n        <React.Fragment>\n            <Jumbotron>\n                <Container>\n                    <Row>\n                        <Col xs=\"12\" md=\"7\" className=\"d-flex flex-column justify-content-center p-3\">\n                            <h3 className=\"display-4 mb-1\">Pairing</h3>\n                            <p className=\"mb-4 lead\">Select your activity and availability to get paired.</p>\n                        </Col>\n                        <Col xs=\"12\" md=\"5\" className=\"p-4\">\n                            <h3 className=\"mb-3\">Pairing </h3>\n                            <Form onSubmit={handleSubmit}>\n                                <Row>\n                                    <Col>\n                                        <FormGroup>\n                                            <Label>Date</Label>\n                                            <Input name=\"date\" type=\"date\" className=\"form-control\" placeholder=\"0\" draggable=\"true\" value={date} onChange={e => setDate(e.target.value)} required />\n                                            <FormFeedback>Select a date</FormFeedback>\n                                        </FormGroup>\n                                    </Col>\n                                    <Col>\n                                        <FormGroup>\n                                            <Label>Time</Label>\n                                            <Input name=\"time\" type=\"time\" className=\"form-control\" placeholder=\"0\" draggable=\"true\" value={time} onChange={e => setTime(e.target.value)} required />\n                                            <FormFeedback className=\"invalid-feedback\">Select a time</FormFeedback>\n                                        </FormGroup>\n                                    </Col>\n                                </Row>\n                                <FormGroup>\n                                    <Label for=\"location\">Location</Label>\n                                    <Input name=\"location\" type=\"select\" className=\"form-control\" id=\"location\" value={location} onChange={handleLocation} required>\n                                        <option value=\"\">Select...</option>\n                                        <option value=\"Chicago\">Chicago</option>\n                                        <option value=\"Houston\">Houston</option>\n                                        <option value=\"Los Angeles\">Los Angeles</option>\n                                        <option value=\"New York City\">New York City</option>\n                                        <option value=\"Philadelphia\">Philadelphia</option>\n                                        <option value=\"San Francisco\">San Francisco</option>\n                                        <option value=\"San Jose\">San Jose</option>\n                                    </Input>\n                                    <FormFeedback>Select a city</FormFeedback>\n                                </FormGroup>\n                                <FormGroup>\n                                    <Label for=\"activity\">Activity</Label>\n                                    <Input name=\"activity\" type=\"select\" className=\"form-control\" id=\"activity\" value={activity} onChange={handleActivity} required>\n                                        <option value=\"\">Select...</option>\n                                        <option value=\"Sports\">Sports</option>\n                                        <option value=\"Movie\">Movie</option>\n                                        <option value=\"Food\">Food</option>\n                                        <option value=\"Museum\">Museum</option>\n                                    </Input>\n                                    <FormFeedback>Select an activity</FormFeedback>\n                                </FormGroup>\n                                <Button type=\"submit\" value=\"submit\" className=\"btn mt-4 btn-block btn-outline p-2\" ><b>Select</b></Button>\n                            </Form>\n                        </Col>\n                    </Row>\n                </Container>\n            </Jumbotron>\n            <div ref={cardFocus} />\n            {shown && <Activity date={date} time={time} activity={activity === \"Food\" ? \" \" : activity} location={location} name={name} restaurant={restaurant} image={image} userReject={userRejectPairing} modalReject={modalRejectPairing} />}\n\n        </React.Fragment>\n    );\n}\n\n\n\n\nexport default Pairing;","import React, { useState, useRef } from 'react';\nimport Activity from './ActivityComponent/ActivityComponent';\nimport { Jumbotron, Container, Row, Col, Form, FormGroup, Label, Input, Button } from 'reactstrap';\nimport { USERDATA } from '../shared/userData.js';\n\nfunction Suggest(props) {\n\n    const [date, setDate] = useState('');\n    const [time, setTime] = useState('');\n    const [activity, setActivity] = useState('');\n    const [location, setLocation] = useState('');\n    const [name, setName] = useState('');\n    const [image, setImage] = useState('');\n    const [userdata] = useState(USERDATA);\n    const [shown, setShown] = useState(false);\n    const [modalReject, setModalReject] = useState(false);\n\n    const cardFocus = useRef(null);\n\n    const userReject = () => {\n        setModalReject(true);\n        setTimeout(userReject2, 500)\n    };\n    const userReject2 = () => {\n        activity === 'food' ? setActivity('') : console.log('');\n        const selectUserIndex = randomNumber()\n        setName(userdata[selectUserIndex].name);\n        setImage(userdata[selectUserIndex].image);\n        setActivity(userdata[randomNumber()].activity);\n        setLocation(userdata[randomNumber()].location);\n        setModalReject(false);\n    }\n\n    const handleSubmit = event => {\n        let today = new Date();\n        let hours = today.getHours();\n        let minutes = (today.getMinutes() < 10 ? '0' : '') + (today.getMinutes());\n        let month = today.getMonth();\n        let day = today.getDate();\n\n        activity === 'food' ? setActivity('') : console.log('');\n        const selectUserIndex = randomNumber()\n        setName(userdata[selectUserIndex].name);\n        setImage(userdata[selectUserIndex].image);\n        setTime(`${hours}:${minutes}`);\n        setActivity(userdata[randomNumber()].activity);\n        setLocation(userdata[randomNumber()].location);\n        if (date.length > 5) {\n            setDate(date.substr(5, 8))\n        }\n        if (!date) {\n            setDate(`${month}-${day}`)\n        }\n        setShown(true);\n        setTimeout(scrollToBottom, 0);\n        event.preventDefault();\n    }\n\n    const scrollToBottom = () => {\n        cardFocus.current.scrollIntoView({\n            behavior: \"smooth\"\n        })\n    };\n\n\n    const randomNumber = () => Math.floor(Math.random() * 4);\n\n\n    return (\n        <React.Fragment>\n            <Jumbotron>\n                <Container>\n                    <Row>\n                        <Col xs=\"12\" md=\"7\" className=\"d-flex flex-column justify-content-center p-3\">\n                            <h3 className=\"display-4 mb-1\">Suggestion</h3>\n                            <p className=\"mb-4 lead\">Randomly get paired with an activity and partner.</p>\n                        </Col>\n                        <Col xs=\"12\" md=\"5\" className=\"p-4\">\n                            <h3 className=\"mb-3\">Suggestion</h3>\n                            <Form onSubmit={handleSubmit}>\n                                <FormGroup>\n                                    <Label>Date</Label>\n                                    <Input name=\"date\" type=\"date\" className=\"form-control\" placeholder=\"0\" draggable=\"true\" value={date} onChange={e => setDate(e.target.value)} />\n                                </FormGroup>\n                                <Button type=\"submit\" value=\"submit\" className=\"btn mt-4 btn-block btn-outline p-2\"><b>Select</b></Button>\n                            </Form>\n                        </Col>\n                    </Row>\n                </Container>\n            </Jumbotron>\n            <div ref={cardFocus}/>\n            {shown && <Activity date={date} time={time} activity={activity} location={location} name={name} image={image} userReject={userReject} modalReject={modalReject} />}\n            <div className=\"height-div\" />\n        </React.Fragment>\n    );\n}\n\nexport default Suggest;","import React from 'react';\nimport { Switch, Route, Redirect } from 'react-router-dom';\nimport { withRouter } from 'react-router';\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\n\nimport Header from './HeaderComponent';\nimport Footer from './FooterComponent';\nimport Home from './HomeComponent/HomeComponent';\nimport Pairing from './PairingComponent';\nimport Suggest from './SuggestComponent';\n\n// function Main(props) {\n//     return (\n//         <div>\n//             <Header />\n//             <TransitionGroup>\n//                 <CSSTransition classNames=\"page\" timeout={300}>\n//                     <Switch >\n//                         <Route exact path='/home' component={Home} />\n//                         <Route exact path='/pairing' component={Pairing} />\n//                         <Route exact path='/suggest' component={Suggest} />\n//                         <Redirect to='/home' />\n//                     </Switch>\n//                 </CSSTransition>\n//             </TransitionGroup> \n//             <Footer />\n\n//         </div>\n//     );\n// }\nconst Main = withRouter(({ location }) => (\n    <React.Fragment>\n    <Header />\n    <TransitionGroup>\n        <CSSTransition\n            key={location.key}\n            classNames=\"page\"\n            timeout={300}\n        >\n            <Switch location={location}>\n                <Route exact path='/home' component={Home} />\n                <Route exact path='/pairing' component={Pairing} />\n                <Route exact path='/suggest' component={Suggest} />\n                <Redirect to='/home' />\n            </Switch>\n        </CSSTransition>\n    </TransitionGroup>\n    <Footer />\n    </React.Fragment>\n));\nexport default Main;","import React, { Component } from 'react';\nimport './App.css';\nimport Main from './components/MainComponent';\nimport { BrowserRouter } from 'react-router-dom';\n\nclass App extends Component {\n  render() {\n    return (\n      <BrowserRouter>\n        <div className=\"App\">\n          <Main />\n        </div>\n      </BrowserRouter>\n    )\n  }\n\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'font-awesome/css/font-awesome.css'\nimport 'bootstrap-social/bootstrap-social.css'\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  \n    <App />\n  ,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}